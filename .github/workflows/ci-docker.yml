name: CI/CD â€“ Build, Test, and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/new-reat-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/new-reat-frontend

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    services:
      db:
        image: mariadb:10.6.4-focal
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: example
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -p$$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install backend dependencies
        working-directory: backend
        run: npm ci
        
      - name: Create db/password.txt file
        run: |
          mkdir -p db
          echo "rootpassword" > db/password.txt

      - name: Run backend tests
        working-directory: backend
        run: npm test
        env:
          NODE_ENV: test
          PORT: 8081
          DATABASE_HOST: localhost
          DATABASE_PORT: 3306
          DATABASE_USER: root
          DATABASE_PASSWORD: ../db/password.txt
          DATABASE_DB: example

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Run frontend tests
        run: npm test
        working-directory: frontend

  build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:latest

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:latest

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [test, build-push]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deployment would happen here"
          echo "This could include:"
          echo "- Kubernetes deployment"
          echo "- Docker Compose deployment"
          echo "- Cloud platform deployment"
          echo "- Infrastructure as Code updates"